// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenShock.Desktop.RepositoryServer.RepoServerDb;

#nullable disable

namespace OpenShock.Desktop.RepositoryServer.Migrations
{
    [DbContext(typeof(MigrationOpenShockContext))]
    [Migration("20250315184152_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OpenShock.Desktop.RepositoryServer.RepoServerDb.Module", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("icon_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.Property<string>("SourceUrl")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("source_url");

                    b.HasKey("Id")
                        .HasName("modules_pkey");

                    b.ToTable("modules", (string)null);
                });

            modelBuilder.Entity("OpenShock.Desktop.RepositoryServer.RepoServerDb.Version", b =>
                {
                    b.Property<string>("VersionName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("version");

                    b.Property<string>("Module")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("module");

                    b.Property<string>("ChangelogUrl")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("changelog_url");

                    b.Property<byte[]>("HashSha256")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("hash_sha256");

                    b.Property<string>("ReleaseUrl")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("release_url");

                    b.Property<string>("ZipUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("zip_url");

                    b.HasKey("VersionName", "Module")
                        .HasName("versions_pkey");

                    b.HasIndex("Module");

                    b.ToTable("versions", (string)null);
                });

            modelBuilder.Entity("OpenShock.Desktop.RepositoryServer.RepoServerDb.Version", b =>
                {
                    b.HasOne("OpenShock.Desktop.RepositoryServer.RepoServerDb.Module", "ModuleNavigation")
                        .WithMany("Versions")
                        .HasForeignKey("Module")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_versions_module");

                    b.Navigation("ModuleNavigation");
                });

            modelBuilder.Entity("OpenShock.Desktop.RepositoryServer.RepoServerDb.Module", b =>
                {
                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
